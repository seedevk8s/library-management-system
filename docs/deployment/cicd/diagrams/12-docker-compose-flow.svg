<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 1100">
  <!-- Title -->
  <text x="600" y="30" font-size="24" font-weight="bold" text-anchor="middle" fill="#232F3E">
    docker-compose 실행 흐름
  </text>
  <text x="600" y="55" font-size="14" text-anchor="middle" fill="#666">
    docker-compose up -d 명령어 실행 시 내부 동작
  </text>

  <!-- Command -->
  <rect x="400" y="80" width="400" height="50" fill="#212529" stroke="#000" stroke-width="2" rx="8"/>
  <text x="600" y="110" font-size="16" font-weight="bold" text-anchor="middle" fill="#0f0">$ docker-compose up -d</text>

  <!-- Arrow -->
  <path d="M 600 130 L 600 170" stroke="#212529" stroke-width="3" marker-end="url(#arrow-black)"/>
  <defs>
    <marker id="arrow-black" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#212529" />
    </marker>
  </defs>

  <!-- Step 1: Read YAML -->
  <rect x="50" y="170" width="1100" height="100" fill="#fff3cd" stroke="#ffc107" stroke-width="3" rx="8"/>
  <text x="70" y="200" font-size="16" font-weight="bold" fill="#856404">Step 1. docker-compose.yml 파일 읽기</text>
  <rect x="70" y="210" width="1060" height="50" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="230" font-size="12" fill="#212529">- YAML 파일 파싱</text>
  <text x="80" y="250" font-size="12" fill="#212529">- services, networks, volumes 섹션 확인</text>
  
  <!-- Arrow -->
  <path d="M 600 270 L 600 290" stroke="#ffc107" stroke-width="3" marker-end="url(#arrow-yellow)"/>
  <defs>
    <marker id="arrow-yellow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#ffc107" />
    </marker>
  </defs>

  <!-- Step 2: Create Networks -->
  <rect x="50" y="290" width="1100" height="100" fill="#fff9c4" stroke="#ffc107" stroke-width="3" rx="8"/>
  <text x="70" y="320" font-size="16" font-weight="bold" fill="#856404">Step 2. Networks 생성</text>
  <rect x="70" y="330" width="1060" height="50" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="350" font-size="12" fill="#212529">- library-network (Bridge 네트워크) 생성</text>
  <text x="80" y="370" font-size="12" fill="#6c757d">→ 컨테이너들이 서로 통신할 네트워크 환경 구축</text>

  <!-- Arrow -->
  <path d="M 600 390 L 600 410" stroke="#ffc107" stroke-width="3" marker-end="url(#arrow-yellow)"/>

  <!-- Step 3: Create Volumes -->
  <rect x="50" y="410" width="1100" height="100" fill="#d1e7dd" stroke="#198754" stroke-width="3" rx="8"/>
  <text x="70" y="440" font-size="16" font-weight="bold" fill="#0a3622">Step 3. Volumes 생성</text>
  <rect x="70" y="450" width="1060" height="50" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="470" font-size="12" fill="#212529">- mysql-data Named Volume 생성</text>
  <text x="80" y="490" font-size="12" fill="#6c757d">→ MySQL 데이터를 영구 저장할 공간 확보</text>

  <!-- Arrow -->
  <path d="M 600 510 L 600 530" stroke="#198754" stroke-width="3" marker-end="url(#arrow-green)"/>
  <defs>
    <marker id="arrow-green" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#198754" />
    </marker>
  </defs>

  <!-- Step 4: Build Images -->
  <rect x="50" y="530" width="1100" height="120" fill="#e7f1ff" stroke="#0d6efd" stroke-width="3" rx="8"/>
  <text x="70" y="560" font-size="16" font-weight="bold" fill="#0d47a1">Step 4. 이미지 빌드 (build: 설정이 있는 경우)</text>
  <rect x="70" y="570" width="1060" height="70" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="595" font-size="12" fill="#212529">- app 서비스: Dockerfile로 이미지 빌드</text>
  <text x="90" y="615" font-size="11" font-family="monospace" fill="#6c757d">docker build -t library-management-system_app:latest .</text>
  <text x="80" y="635" font-size="12" fill="#6c757d">- mysql 서비스: mysql:8.0 이미지 다운로드 (이미 있으면 스킵)</text>

  <!-- Arrow -->
  <path d="M 600 650 L 600 670" stroke="#0d6efd" stroke-width="3" marker-end="url(#arrow-blue)"/>
  <defs>
    <marker id="arrow-blue" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#0d6efd" />
    </marker>
  </defs>

  <!-- Step 5: Create Containers -->
  <rect x="50" y="670" width="1100" height="160" fill="#e3f2fd" stroke="#0dcaf0" stroke-width="3" rx="8"/>
  <text x="70" y="700" font-size="16" font-weight="bold" fill="#055160">Step 5. 컨테이너 생성 및 시작 (의존성 순서)</text>
  
  <!-- MySQL Container -->
  <rect x="70" y="715" width="500" height="100" fill="#fff" stroke="#0dcaf0" stroke-width="2" rx="5"/>
  <text x="80" y="735" font-size="13" font-weight="bold" fill="#055160">5-1. MySQL 컨테이너 먼저 시작</text>
  <text x="90" y="755" font-size="11" fill="#212529">- library-mysql 컨테이너 생성</text>
  <text x="90" y="772" font-size="11" fill="#212529">- 환경 변수 설정 (MYSQL_ROOT_PASSWORD 등)</text>
  <text x="90" y="789" font-size="11" fill="#212529">- Volume 마운트: mysql-data → /var/lib/mysql</text>
  <text x="90" y="806" font-size="11" fill="#198754">- Health Check 대기 (mysqladmin ping 성공까지)</text>
  
  <!-- App Container -->
  <rect x="590" y="715" width="480" height="100" fill="#fff" stroke="#0d6efd" stroke-width="2" rx="5"/>
  <text x="600" y="735" font-size="13" font-weight="bold" fill="#0d47a1">5-2. App 컨테이너 시작 (MySQL 준비 후)</text>
  <text x="610" y="755" font-size="11" fill="#212529">- library-app 컨테이너 생성</text>
  <text x="610" y="772" font-size="11" fill="#212529">- 환경 변수 설정 (DB_URL, DB_USERNAME 등)</text>
  <text x="610" y="789" font-size="11" fill="#212529">- Volume 마운트: ./uploads → /app/uploads</text>
  <text x="610" y="806" font-size="11" fill="#198754">- Spring Boot 애플리케이션 시작</text>

  <!-- Arrow between containers -->
  <path d="M 570 765 L 590 765" stroke="#198754" stroke-width="3" marker-end="url(#arrow-green)"/>
  <text x="580" y="755" font-size="10" font-weight="bold" text-anchor="middle" fill="#198754">depends_on</text>

  <!-- Arrow -->
  <path d="M 600 830 L 600 850" stroke="#0dcaf0" stroke-width="3" marker-end="url(#arrow-cyan)"/>
  <defs>
    <marker id="arrow-cyan" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#0dcaf0" />
    </marker>
  </defs>

  <!-- Step 6: Network Connection -->
  <rect x="50" y="850" width="1100" height="100" fill="#fff9c4" stroke="#ffc107" stroke-width="3" rx="8"/>
  <text x="70" y="880" font-size="16" font-weight="bold" fill="#856404">Step 6. 네트워크 연결</text>
  <rect x="70" y="890" width="1060" height="50" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="910" font-size="12" fill="#212529">- 모든 컨테이너를 library-network에 연결</text>
  <text x="80" y="930" font-size="12" fill="#6c757d">→ mysql, app 컨테이너가 서로 통신 가능 (서비스 이름으로 접근)</text>

  <!-- Arrow -->
  <path d="M 600 950 L 600 970" stroke="#ffc107" stroke-width="3" marker-end="url(#arrow-yellow)"/>

  <!-- Result -->
  <rect x="50" y="970" width="1100" height="110" fill="#d1f4dd" stroke="#198754" stroke-width="3" rx="8"/>
  <text x="70" y="1000" font-size="18" font-weight="bold" fill="#0a3622">완료: 시스템 실행 중</text>
  <rect x="70" y="1010" width="1060" height="60" fill="#fff" stroke="#dee2e6" rx="5"/>
  <text x="80" y="1035" font-size="13" fill="#198754">✓ MySQL 컨테이너: localhost:3307 (외부), mysql:3306 (내부)</text>
  <text x="80" y="1055" font-size="13" fill="#198754">✓ App 컨테이너: localhost:8081 (외부/내부)</text>

  <!-- Side Note -->
  <rect x="1220" y="170" width="160" height="300" fill="#f8f9fa" stroke="#6c757d" stroke-width="2" rx="8"/>
  <text x="1300" y="195" font-size="13" font-weight="bold" text-anchor="middle" fill="#212529">주요 옵션</text>
  
  <text x="1230" y="220" font-size="11" font-weight="bold" fill="#212529">-d (detach)</text>
  <text x="1230" y="237" font-size="9" fill="#6c757d">백그라운드 실행</text>
  
  <text x="1230" y="260" font-size="11" font-weight="bold" fill="#212529">--build</text>
  <text x="1230" y="277" font-size="9" fill="#6c757d">이미지 강제 재빌드</text>
  
  <text x="1230" y="300" font-size="11" font-weight="bold" fill="#212529">--force-recreate</text>
  <text x="1230" y="317" font-size="9" fill="#6c757d">컨테이너 강제 재생성</text>
  
  <text x="1230" y="340" font-size="11" font-weight="bold" fill="#212529">-f [파일명]</text>
  <text x="1230" y="357" font-size="9" fill="#6c757d">다른 YAML 파일 사용</text>
  
  <rect x="1230" y="375" width="140" height="80" fill="#fff3cd" stroke="#ffc107" rx="3"/>
  <text x="1300" y="395" font-size="10" font-weight="bold" text-anchor="middle" fill="#856404">중지/삭제</text>
  <text x="1238" y="413" font-size="9" font-family="monospace" fill="#212529">docker-compose down</text>
  <text x="1238" y="428" font-size="8" fill="#6c757d">컨테이너+네트워크 삭제</text>
  <text x="1238" y="443" font-size="9" font-family="monospace" fill="#dc3545">docker-compose down -v</text>
  <text x="1238" y="451" font-size="8" fill="#6c757d">Volume까지 삭제</text>
</svg>